plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}


loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name

    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}


processResources {
    inputs.property "version", project.version
    //inputs.property "mod_name": project.getArchivesBaseName()

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
        expand "mod_name": project.getArchivesBaseName()
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = null
}

jar {
    archiveClassifier = "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.mod_id + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        maven {
            url = "https://www.cursemaven.com"
            allowInsecureProtocol = true
        }
    }
}


//repositories{
//    // Built mods
//    mavenCentral()
//}

dependencies {
    forge "net.minecraftforge:forge:${forge_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    implementation 'org.jetbrains:annotations:22.0.0'

    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:${mixin_extras_version}"))
    implementation(include("io.github.llamalad7:mixinextras-forge:${mixin_extras_version}"))
    annotationProcessor 'net.fabricmc:sponge-mixin:0.12.5+mixin.0.8.5'

//!! MOONLIGHT LIB (REQUIRED)  -------------------------------------------------------------------------------------- \\
    String path = System.getenv('REPOS20_1')
    boolean usesMavenLocalML =  System.getenv().MY_PC == "1"
    print "isMyPc: $usesMavenLocalML\n"

        //- Repository LOCAL
    if (enable_moonlight_test.toBoolean()) {
        if (usesMavenLocalML) {
            //- ~/forge/mods LOCAL
            modImplementation("net.mehvahdjukaar:moonlight-forge:${project.moonlight_testVersion}") // LOCAL
        } else {
            modImplementation(files(path + "\\Moonlight\\forge\\build\\libs\\moonlight-${moonlight_testVersion}-forge.jar"))
        }
    } else {
        //+ MAVEN
        modImplementation("maven.modrinth:moonlight:${moonlight_mavenVersion}-forge") // v2.15.7
    }

//!! EVERY COMPAT (REQUIRED) ---------------------------------------------------------------------------------------- \\
    if (enable_everycomp_test.toBoolean()) {
        //- Repository LOCAL - Every Compat
        modImplementation(files(path + "\\WoodGood\\forge\\build\\libs\\everycomp-${everycomp_testVersion}-forge.jar"))
    } else if (enable_librarysection_test.toBoolean()) {
        //- Repository LOCAL - Library Section
        modImplementation(files(path + "\\WoodGood-Library\\forge\\build\\libs\\everycomp-LS-${everycomp_testVersion}-forge.jar"))
    } else {
        //+ MAVEN
        if (useLibrarySection_maven.toBoolean())
            modImplementation("maven.modrinth:library-section:${everycomp_mavenVersion}-forge") // v2.8.14
        else
            modImplementation("maven.modrinth:every-compat:${everycomp_mavenVersion}-forge")
    }

//!! TOOLS ---------------------------------------------------------------------------------------------------------- \\
    modRuntimeOnly("curse.maven:jei-238222:5846810")
    modRuntimeOnly("curse.maven:worldedit-225608:4586218")
    modRuntimeOnly("curse.maven:jade-324717:5672013")
    modRuntimeOnly("curse.maven:emi-580555:5872526")
    modRuntimeOnly("curse.maven:crafttweaker-239197:5880672")

//!! ================================================= DEPENDENCIES ================================================= \\
        //- ONLY FOR TESTING - can be commented out or enabled
    modRuntimeOnly("curse.maven:terrablender-563928:5378180") // v3.0.1.7 |
    modRuntimeOnly("curse.maven:citadel-331936:6002521") // v2.6.1 | Alexs-Caves
//    modRuntimeOnly("curse.maven:yungs-api-421850:5769971") // v4.0.6 | Better-Archeology
//    modRuntimeOnly("curse.maven:patchouli-306770:6164575") // v84.1 | TFC
//    modRuntimeOnly("curse.maven:puzzles-lib-495476:5904750") // v8.1.25 | Stoneworks
//    modRuntimeOnly("curse.maven:zeta-968868:6312779") // v1.0.28 | Quark
//    modRuntimeOnly("curse.maven:athena-841890:5176879") // v3.1.2 | Chipped
//    modRuntimeOnly("curse.maven:resourceful-lib-570073:5659871") // v2.1.29 | Chipped, Handcrafted
//    modRuntimeOnly("curse.maven:ctm-267602:5983309") // v1.1.10 | Chipped
//    modRuntimeOnly("curse.maven:fusion-connected-textures-854949:5129294") // v1.1.1 | Rechiseled
//    modRuntimeOnly("curse.maven:curios-309927:6418456") // v5.14.1 | Eternal-Tales
//    modRuntimeOnly("curse.maven:supermartijn642s-config-lib-438332:4715408") // v1.1.8 | Rechiseled, Better-Archeology
//    modRuntimeOnly("curse.maven:mantle-74924:6041712") // v1.11.28 | Tinkers-Construct
    modRuntimeOnly("curse.maven:blueprint-382216:5292242") // v7.1.0 | The-Outer-End, Caverns-And-Chasms, Atmospheric
//    modRuntimeOnly("curse.maven:monolib-968432:6123976") // v2.0.0 | More-Beautiful-Torches
//    modRuntimeOnly("curse.maven:balm-531761:6778755") // v7.3.32 | Waystones
//    modRuntimeOnly("curse.maven:architectury-api-419699:5137938") // v9.2.14 | [Let's-Do]-Candlelight, [Let's-Do]-Farm-&-Charm,

        //- ~/forge/mods LOCAL

        //- OTHER MAVENs - can be commented out or enabled
//    forgeRuntimeLibrary("com.teamresourceful:bytecodecs:1.0.2") // Chipped
//    modRuntimeOnly("dev.engine-room.flywheel:flywheel-forge-${minecraft_version}:${flywheel_version}") // Create
//    modRuntimeOnly("net.createmod.ponder:Ponder-Forge-${minecraft_version}:${ponder_version}") // Create

        //+ REQUIRED - The modules access libaries from below - Only in FORGE
    modCompileOnly("curse.maven:supermartijn642s-core-lib-454372:5668859") // v1.1.17a | Rechiseled

            //+ OTHER MAVENS
    modCompileOnly("com.tterrag.registrate:Registrate:${registrate_version}") // Create

//!! =================================================== IMPORTS ==================================================== \\
        //- ONLY FOR TESTING - can be commented out or enabled
//    modRuntimeOnly("curse.maven:better-archeology-835687:5693368") // supermartijn642s' Config-Lib, Yung's API
//    modRuntimeOnly("curse.maven:building-but-better-989479:5362380") // v1.0.1
//    modRuntimeOnly("curse.maven:decorative-blocks-362528:5089406")
//    modRuntimeOnly("curse.maven:handcrafted-538214:5118729") // ResourceFul-Lib
//    modRuntimeOnly("curse.maven:more-beautiful-torches-860325:5263631") // Monolib
//    modRuntimeOnly("curse.maven:quark-243121:6312787") // Zeta
//    modRuntimeOnly("curse.maven:stoneworks-852663:4611947") // puzzles-lib
//    modRuntimeOnly("curse.maven:twigs-496913:4605097")
//    modRuntimeOnly("curse.maven:waystones-245755:6779067") // Balm
//    modRuntimeOnly("curse.maven:lets-do-farm-charm-1038103:6561948") // Architectury-API
//    modRuntimeOnly("curse.maven:lets-do-candlelight-farm-charm-compat-1038117:6195385") // [Let's-Do]-Farm-&-Charm, Architectury-API

            //- OTHER MAVENS
//    modRuntimeOnly("earth.terrarium.chipped:chipped-forge-${minecraft_version}:3.0.7") //INCLUDED: Athena, Resourceful-Lib, REQUIRE: Bytecodecs

        //+ REQUIRED - The modules access libaries from below - ONLY IN FORGE
            // MACAW's
    modCompileOnly("curse.maven:macaws-bridges-351725:5240518") //v3.0.0
    modCompileOnly("curse.maven:macaws-paths-and-pavings-629153:5341126") //v1.0.5
    modCompileOnly("curse.maven:macaws-windows-363569:5589363") //v2.3.0
    modCompileOnly("curse.maven:macaws-roofs-352039:5554957") //v2.3.1
    modCompileOnly("curse.maven:macaws-fences-and-walls-453925:5442217") //v1.1.2
    modCompileOnly("curse.maven:macaws-stairs-1119394:6155181") //v1.0.1

            //+ GENERAL
    modCompileOnly("curse.maven:additional-lights-384991:4596807")
    modCompileOnly("curse.maven:blocks-you-need-925718:6759906")
    modCompileOnly("curse.maven:buildersaddition-389697:4772826")
    modCompileOnly("curse.maven:rechiseled-558998:5286306") // Fusion, supermartijn642s-[ Config-Lib, Core-Lib ]
    modCompileOnly("curse.maven:stone-chest-307052:5389562")

            // OTHER MAVENS
    modCompileOnly("com.simibubi.create:create-${minecraft_version}:${create_version}:slim") { transitive = false } // Registrate, Flywheel, Ponder

            // ~/forge/mods LOCAL
    modCompileOnly("blocks_plus:blocks+1.20.1-1.7")

//!! ================================================= FOR TESTING ================================================== \\

    // STONETYPE ONLY
    modRuntimeOnly("curse.maven:alexs-caves-924854:5848216") // Citadel
//    modRuntimeOnly("curse.maven:strata-forge-edition-387296:4989643")
//    modRuntimeOnly("curse.maven:spelunkery-790530:5727135") // Moonlight-Lib
//    modRuntimeOnly("curse.maven:tinkers-construct-74072:6041763") // Mantle
//    modRuntimeOnly("curse.maven:thaumon-926511:5492065")
//    modRuntimeOnly("curse.maven:gaia-dimension-302529:4794552")
//    modRuntimeOnly("curse.maven:what-is-stone-colorful-caves-853161:5175855")
    modRuntimeOnly("curse.maven:artsandcrafts-1034791:5992027")
    modRuntimeOnly("curse.maven:the-outer-end-430404:5812948") // Blueprint
    modRuntimeOnly("curse.maven:caverns-and-chasms-438005:6040957") // Blueprint
    modRuntimeOnly("curse.maven:atmospheric-362393:6393127") // Blueprint
//    modRuntimeOnly("curse.maven:aerial-hell-674630:5423795")
//    modRuntimeOnly("curse.maven:the-undergarden-379849:5182632")
//    modRuntimeOnly("curse.maven:natures-spirit-1044992:6445117")
//    modRuntimeOnly("curse.maven:galosphere-631098:4983871")
//    modRuntimeOnly("curse.maven:eternal-tales-416512:6687256")
//    modRuntimeOnly("curse.maven:regions-unexplored-659110:5558225")
    modRuntimeOnly("curse.maven:twigs-496913:4998195")

    // MUDTYPE ONLY
    modRuntimeOnly("curse.maven:deeperdarker-659011:5906086")

    // STONETYPE & WOODTYPE
//    modRuntimeOnly("curse.maven:terrafirmacraft-302973:6739107") // patchouli

}
